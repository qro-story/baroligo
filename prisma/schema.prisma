generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Host {
  id              Int     @id @default(autoincrement())
  spaceCloudEmail String
  spaceCloudPw    String
  aligoId         String
  aligoKey        String
  aligoSender     String
  status          String  @default("U") @db.VarChar(4)
  accessToken     String? @default("") @db.VarChar(500)

  space       Space[]
  messageBase MessageBase[]
  place       Place[]
}

model Reservation {
  id              Int     @id @default(autoincrement())
  userId          String?
  reservationNum  Int     @unique
  tagReservation  String
  dateReservation String?
  price           String?
  placeId         Int?
  spaceId         Int     @default(0)

  space Space  @relation(fields: [spaceId], references: [id])
  user  User?  @relation(fields: [userId], references: [id])
  place Place? @relation(fields: [placeId], references: [id])

  @@index([spaceId])
  @@index([userId])
  @@index([placeId])
}

model User {
  id           String           @id 
  userName     String
  phoneNumber  String
  usedCount    Int?          @default(1)
  reservations Reservation[]
}

model MessageBase {
  id                Int @id @default(autoincrement())
  hostId            Int
  maxReservationNum Int @default(0)

  host Host @relation(fields: [hostId], references: [id])

  @@index([hostId])
}

model Place {
  id          Int     @id @default(autoincrement())
  hostId      Int
  description String
  message     String? @db.VarChar(2000)
  status      String  @default("U") @db.VarChar(4)

  host         Host          @relation(fields: [hostId], references: [id])
  reservations Reservation[]

  @@index([hostId])
}

model Space {
  id       Int     @id
  name     String  @db.VarChar(100)
  imageUrl String?  @db.VarChar(1000)
  isPublic String?  @default("Y") @db.VarChar(4) // Y는 공개 N은 비공개 
  message  String? @db.VarChar(2000)
  hostId   Int
  isMessage String  @default("Y") @db.VarChar(4) // Y이면 보내고 N이면 안보냄

  registedAt DateTime? @db.Timestamp(0) // 스클에 등록된 날짜 
  createdAt  DateTime? @default(now()) @db.Timestamp(0) // 디비에 등록된 날짜

  host         Host          @relation(fields: [hostId], references: [id])
  reservations Reservation[]
  product      Product[]

  @@index([hostId])
}

model Product {
  id         Int      @id
  name       String   @db.VarChar(100)
  isPublic   String   @default("Y") @db.VarChar(4) // Y는 공개 N은 비공개 
  registedAt DateTime @db.Timestamp(0) // 스클에 등록된 날짜 
  createdAt  DateTime @default(now()) @db.Timestamp(0) // 디비에 등록된 날짜
  spaceId    Int

  space Space @relation(fields: [spaceId], references: [id])

  @@index([spaceId])
}
